import { RNG0 } from "exploits/casino/rng"
import { click, goToCasino, setText } from "exploits/casino/utils"

/** @param {NS} ns */
function isCoinFlipOpen() {

   return !(getTailButton() == null)

}

function getHeadButton() {
   let input = eval("document").querySelectorAll("button")

   for (let i = 0; i < input.length; i++) {
      if (input[i].innerText == "Head!") {
         return input[i]
      }

   }
   return null
}

function getTailButton() {
   let input = eval("document").querySelectorAll("button")

   for (let i = 0; i < input.length; i++) {
      if (input[i].innerText == "Tail!") {
         return input[i]
      }
   }
   return null
}

function getInput() {
   let input = eval("document").querySelectorAll("input")
   return input[0]
}

function getResult() {
   let resultdiv = eval("document").getElementsByClassName("MuiBox-root css-k008qs")
   if (resultdiv.length > 0) {

      let resultP = resultdiv[0].children[0]
      return resultP.innerText

   }
   return null
}

async function changeBetValue(v) {
   getInput().value = v
   await setText(_ns, getInput(), v)
}


async function getOutputData() {

   let output = []

   for (let i = 0; i < 50; i++) {
      await changeBetValue(0)
      await click(_ns, getHeadButton())
      output.push(getResult())

   }

   return output
}

//Brutforce
async function getRngSeed() {
   let badRng = new RNG0()
   badRng.x = 1

   let x0 = 1

   let outputs = await getOutputData()

   let count = 0

   while (x0 < 1030) {
      //if v < 0.5 : head
      //else tail

      let v = badRng.random()

      if ((v < 0.5 && outputs[count] == 'H') || (v >= 0 && outputs[count] == 'T')) {
         count++
      } else {
         badRng.x = ++x0;
         count = 0
      }

      if (count == outputs.length) {
         return badRng.x
      }

   }
   return -1
}




/** @type {NS} */
let _ns;




async function playCoinFlip(seed) {
   let rng = new RNG0()
   rng.x = seed
   //5000 =~ 37 secs
   for (let i = 0; i < 2500; i++) {

      try {
         _ns.singularity.setFocus(false)
      } catch { }

      if (!isCoinFlipOpen()) {
         return
      }

      let bet = Math.min(10e3, Math.floor(_ns.getServerMoneyAvailable("home")))
      await changeBetValue(bet)
      let v = rng.random()
      let p = v < 0.5 ? 0 : 1 // 0 : head, 1 : tail

      if (p == 0) {
         await click(_ns, getHeadButton())
      } else {
         await click(_ns, getTailButton())
      }


   }
}



/** @param {NS} ns */
export async function main(ns) {
   _ns = ns

   ns.disableLog("sleep")
   ns.disableLog("getServerMoneyAvailable")
   ns.clearLog()

   if (!isCoinFlipOpen()) {
      await goToCasino(ns, "coin flip")
   }



   if (isCoinFlipOpen()) {
      let seed = await getRngSeed()

      ns.print("Seed = ", seed)

      ns.print("Next values = ")

      let rng = new RNG0()
      rng.x = seed

      for (let i = 0; i < 10; i++) {
         let v = rng.random()
         let p = v < 0.5 ? "head" : "tail"
         ns.print(p)
      }



      await playCoinFlip(seed)

   }



}